from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from sqlalchemy.ext.asyncio import AsyncSession

from database.queries.pet_query import create_pet, get_pet
from database.models.pet import Pet
from bot.keyboards.inline import get_inline_buttons

router = Router()


@router.message(F.text.casefold() == '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ')
async def take_pet(message: Message, session: AsyncSession):
    telegram_id = message.from_user.id
    pet = await get_pet(session, telegram_id)
    if not pet:
        await create_pet(session, telegram_id)
        await message.answer('Congratulations\\!')
        return
    await message.answer('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü\\. –ú–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π "–º–æ–π –ø—ç—Ç"')


async def generate_pet_caption(pet: Pet) -> str:
    return (
        f'ü¶é*–ò–º—è*: {pet.name}\n‚≠êÔ∏è*–£—Ä–æ–≤–µ–Ω—å*: {pet.level}\n‚ú®*–û–ø—ã—Ç*: {pet.experience}/{pet.max_experience}\n'
        f'‚ù§Ô∏è*–°–æ—Å—Ç–æ—è–Ω–∏–µ*: {"–ó–¥–æ—Ä–æ–≤—ã–π" if pet.state else "–†–∞–Ω–µ–Ω"}\nü¶ó*–ñ—É—á–∫–∏*: {pet.money}\n\n*–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è*:\n\n'
        f'üéñ*–ü–æ–±–µ–¥—ã*: 0\n‚ò†Ô∏è*–ü–æ—Ä–∞–∂–µ–Ω–∏—è*: 0'
    )


@router.message(F.text.casefold() == '–º–æ–π –ø—ç—Ç')
async def send_pet_info(message: Message, session: AsyncSession):
    telegram_id = message.from_user.id
    pet = await get_pet(session, telegram_id)
    if not pet:
        await message.answer('–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞üò∂‚Äçüå´Ô∏è\n –ï–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–ø–∏—Å–∞–≤ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ')
        return

    image = pet.image
    if not pet.image.startswith('file_id_'):
        image = FSInputFile(pet.image)

    caption = await generate_pet_caption(pet)
    inline_keyboard = get_inline_buttons(
        buttons={
            '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': f'/info_{pet.id}',
            '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å': f'/inventory_{pet.id}',
            '–ù–∞ —Ä–∞–±–æ—Ç—É': f'/work_{pet.id}',
        },
        sizes=(2, 1)
    )

    await message.answer_photo(
        image,
        caption=caption,
        reply_markup=inline_keyboard
    )
